apply from:"$rootDir/gradle/base_android_lib.gradle"
apply from:"$rootDir/gradle/deploy_services.gradle"
apply plugin: 'maven'

def user_agent = "PX/Android/" + (version_to_deploy as String)

android {
    defaultConfig {
        buildConfigField "String", "USER_AGENT", "\"$user_agent\""
    }
}


def groupIdLocal = 'com.mercadopago.px'
def artifactIdLocal = 'px-services'
def versionLocal = '1.0.4'

def pomFileNameFinal = "$artifactIdLocal-$versionLocal"+".pom"
def pomFileName = "$buildDir/outputs/aar/$pomFileNameFinal"
def pomDestination = "${System.properties['user.home']}/.m2/repository/com/px/local/$artifactIdLocal/$versionLocal/"
task createPom << {
    pom {
        project {
            groupId groupIdLocal
            artifactId artifactIdLocal
            version versionLocal
        }
    }.writeTo(pomFileName)
}

task copyPom(type: Copy) {
    println(pomFileName)
    println(pomDestination)

    from (pomFileName)
    into (pomDestination)
}

publishing.publications{
    bar(MavenPublication){
        groupId groupIdLocal
        artifactId artifactIdLocal
        version versionLocal
        artifact ("$buildDir/outputs/aar/services-release.aar")
    }
}

task publishPX {
    dependsOn 'build'
    dependsOn 'publishToMavenLocal'
    dependsOn 'createPom'
    dependsOn 'copyPom'
}

dependencies {
    androidTestImplementation project(":testlib")

    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.google.code.gson:gson:$gson"
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp"
}
